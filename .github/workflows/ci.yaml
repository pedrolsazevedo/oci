name: Build and Push Multiarch Docker Images

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  DOCKER_USER: psazevedo

jobs:
  pre_commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - uses: pre-commit/action@v3.0.1

  test_build:
    needs: pre_commit
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image: [alpine, ubuntu, ubi, suse, node, oraclelinux]
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - name: Test build ${{ matrix.image }}
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./build/Dockerfile.${{ matrix.image }}
          platforms: linux/amd64
          push: false

  bump_version:
    needs: test_build
    if: "!startsWith(github.event.head_commit.message, 'bump:')"
    runs-on: ubuntu-latest
    environment: release
    name: "Bump version and create changelog with commitizen"
    outputs:
      bump_version: ${{ steps.cz.outputs.version }}
    steps:
      - name: Check out
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: "${{ secrets.GITHUB_TOKEN }}"
      - id: cz
        name: Create bump and changelog
        uses: commitizen-tools/commitizen-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Print Version
        run: echo "Bumped to version ${{ steps.cz.outputs.version }}"

  build_and_push:
    needs: bump_version
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment: release
    strategy:
      matrix:
        image: [alpine, ubuntu, ubi, suse, node, oraclelinux]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push multiarch
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./build/Dockerfile.${{ matrix.image }}
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ env.DOCKER_USER }}/${{ matrix.image }}:latest
            ${{ env.DOCKER_USER }}/${{ matrix.image }}:${{ needs.bump_version.outputs.bump_version || 'latest' }}
